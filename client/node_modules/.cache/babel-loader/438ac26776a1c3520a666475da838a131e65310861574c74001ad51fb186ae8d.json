{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Project\\\\alkarama-hub\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// pages/Login.js\nimport { login } from \"../utils/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setUserRole\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const handleLogin = role => {\n    login(role);\n    setUserRole(role); // Tell App that we logged in\n    if (role === \"admin\") navigate(\"/admin\");else navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLogin(\"admin\"),\n      className: \"mr-4 bg-blue-600 text-white px-4 py-2 rounded\",\n      children: \"Login as Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLogin(\"diaspora\"),\n      className: \"bg-green-600 text-white px-4 py-2 rounded\",\n      children: \"Login as Diaspora\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["login","useNavigate","jsxDEV","_jsxDEV","Login","setUserRole","_s","navigate","handleLogin","role","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Project/alkarama-hub/client/src/pages/Login.js"],"sourcesContent":["// pages/Login.js\r\nimport { login } from \"../utils/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = ({ setUserRole }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (role) => {\r\n    login(role);\r\n    setUserRole(role); // Tell App that we logged in\r\n    if (role === \"admin\") navigate(\"/admin\");\r\n    else navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-xl font-bold mb-4\">Login</h1>\r\n      <button\r\n        onClick={() => handleLogin(\"admin\")}\r\n        className=\"mr-4 bg-blue-600 text-white px-4 py-2 rounded\"\r\n      >\r\n        Login as Admin\r\n      </button>\r\n      <button\r\n        onClick={() => handleLogin(\"diaspora\")}\r\n        className=\"bg-green-600 text-white px-4 py-2 rounded\"\r\n      >\r\n        Login as Diaspora\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,SAASA,KAAK,QAAQ,eAAe;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,WAAW,GAAIC,IAAI,IAAK;IAC5BT,KAAK,CAACS,IAAI,CAAC;IACXJ,WAAW,CAACI,IAAI,CAAC,CAAC,CAAC;IACnB,IAAIA,IAAI,KAAK,OAAO,EAAEF,QAAQ,CAAC,QAAQ,CAAC,CAAC,KACpCA,QAAQ,CAAC,GAAG,CAAC;EACpB,CAAC;EAED,oBACEJ,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBR,OAAA;MAAIO,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDZ,OAAA;MACEa,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAAC,OAAO,CAAE;MACpCE,SAAS,EAAC,+CAA+C;MAAAC,QAAA,EAC1D;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTZ,OAAA;MACEa,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAAC,UAAU,CAAE;MACvCE,SAAS,EAAC,2CAA2C;MAAAC,QAAA,EACtD;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACT,EAAA,CA3BIF,KAAK;EAAA,QACQH,WAAW;AAAA;AAAAgB,EAAA,GADxBb,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}