{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Project\\\\alkarama-hub\\\\client\\\\src\\\\pages\\\\ForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    const exists = users.find(user => user.email === email);\n    if (exists) {\n      setSubmitted(true);\n    } else {\n      alert(\"No account found with that email.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white/90 p-8 rounded-xl shadow-md w-full max-w-md text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-primary mb-6\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), submitted ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-700\",\n        children: [\"A password reset link has been sent to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 52\n        }, this), \" (simulated).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4 text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-1 text-gray-700\",\n            children: \"Enter your email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            required: true,\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn-primary w-full mt-2\",\n          children: \"Send Reset Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"WOUunRVvClvSUt2+ZfC5ERptgSA=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","submitted","setSubmitted","handleSubmit","e","preventDefault","users","JSON","parse","localStorage","getItem","exists","find","user","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Project/alkarama-hub/client/src/pages/ForgotPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n    const exists = users.find((user) => user.email === email);\r\n\r\n    if (exists) {\r\n      setSubmitted(true);\r\n    } else {\r\n      alert(\"No account found with that email.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center px-4\">\r\n      <div className=\"bg-white/90 p-8 rounded-xl shadow-md w-full max-w-md text-center\">\r\n        <h1 className=\"text-3xl font-bold text-primary mb-6\">Forgot Password</h1>\r\n\r\n        {submitted ? (\r\n          <p className=\"text-green-700\">\r\n            A password reset link has been sent to <strong>{email}</strong> (simulated).\r\n          </p>\r\n        ) : (\r\n          <form onSubmit={handleSubmit} className=\"space-y-4 text-left\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1 text-gray-700\">Enter your email</label>\r\n              <input\r\n                type=\"email\"\r\n                required\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className=\"input\"\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn-primary w-full mt-2\"\r\n            >\r\n              Send Reset Link\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IAC7D,MAAMC,MAAM,GAAGL,KAAK,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACd,KAAK,KAAKA,KAAK,CAAC;IAEzD,IAAIY,MAAM,EAAE;MACVT,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLY,KAAK,CAAC,mCAAmC,CAAC;IAC5C;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,oDAAoD;IAAAC,QAAA,eACjEpB,OAAA;MAAKmB,SAAS,EAAC,kEAAkE;MAAAC,QAAA,gBAC/EpB,OAAA;QAAImB,SAAS,EAAC,sCAAsC;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAExEnB,SAAS,gBACRL,OAAA;QAAGmB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAAC,yCACW,eAAApB,OAAA;UAAAoB,QAAA,EAASjB;QAAK;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,iBACjE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEJxB,OAAA;QAAMyB,QAAQ,EAAElB,YAAa;QAACY,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAC3DpB,OAAA;UAAAoB,QAAA,gBACEpB,OAAA;YAAOmB,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxFxB,OAAA;YACE0B,IAAI,EAAC,OAAO;YACZC,QAAQ;YACRC,KAAK,EAAEzB,KAAM;YACb0B,QAAQ,EAAGrB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;YAC1CT,SAAS,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNxB,OAAA;UACE0B,IAAI,EAAC,QAAQ;UACbP,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EACpC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjDID,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}